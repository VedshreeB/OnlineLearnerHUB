[{"D:\\INTEREST\\LearnerHub\\server\\client\\src\\index.js":"1","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\store.js":"2","D:\\INTEREST\\LearnerHub\\server\\client\\src\\App.js":"3","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\rootReducer.js":"4","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\actions\\userAction.js":"5","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\helper\\setAuthToken.js":"6","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Register.jsx":"7","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Login.jsx":"8","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Home.jsx":"9","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\Payment.jsx":"10","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\ForgotPassword.jsx":"11","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\Cart.jsx":"12","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\MyCourses.jsx":"13","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\UploadVideos.jsx":"14","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\Profile.jsx":"15","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\CourseDetails.jsx":"16","D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\Navbar.jsx":"17","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\userReducer.js":"18","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\courseReducer.js":"19","D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\errorReducer.js":"20","D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\CartCard.jsx":"21","D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\Card.jsx":"22","D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\VideoPlayer.jsx":"23"},{"size":301,"mtime":1667843529780,"results":"24","hashOfConfig":"25"},{"size":458,"mtime":1668074295066,"results":"26","hashOfConfig":"25"},{"size":2195,"mtime":1668074369420,"results":"27","hashOfConfig":"25"},{"size":301,"mtime":1667843529795,"results":"28","hashOfConfig":"25"},{"size":8521,"mtime":1668074290543,"results":"29","hashOfConfig":"25"},{"size":265,"mtime":1667843529793,"results":"30","hashOfConfig":"25"},{"size":4186,"mtime":1667970173454,"results":"31","hashOfConfig":"25"},{"size":3948,"mtime":1667970181917,"results":"32","hashOfConfig":"25"},{"size":1662,"mtime":1667843529789,"results":"33","hashOfConfig":"25"},{"size":1772,"mtime":1667970179291,"results":"34","hashOfConfig":"25"},{"size":6058,"mtime":1667843529788,"results":"35","hashOfConfig":"25"},{"size":836,"mtime":1667843529782,"results":"36","hashOfConfig":"25"},{"size":1067,"mtime":1667843529784,"results":"37","hashOfConfig":"25"},{"size":5851,"mtime":1667843529787,"results":"38","hashOfConfig":"25"},{"size":1920,"mtime":1667843529785,"results":"39","hashOfConfig":"25"},{"size":1833,"mtime":1667843529783,"results":"40","hashOfConfig":"25"},{"size":2865,"mtime":1667843529780,"results":"41","hashOfConfig":"25"},{"size":779,"mtime":1667843529796,"results":"42","hashOfConfig":"25"},{"size":849,"mtime":1667843529793,"results":"43","hashOfConfig":"25"},{"size":1134,"mtime":1667843529794,"results":"44","hashOfConfig":"25"},{"size":859,"mtime":1667843529779,"results":"45","hashOfConfig":"25"},{"size":2021,"mtime":1667843529778,"results":"46","hashOfConfig":"25"},{"size":1387,"mtime":1667843529780,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"j5fh1z",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"D:\\INTEREST\\LearnerHub\\server\\client\\src\\index.js",[],["104","105"],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\store.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\App.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\rootReducer.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\actions\\userAction.js",["106","107","108","109"],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\helper\\setAuthToken.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Register.jsx",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Login.jsx",["110"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory, Link } from 'react-router-dom'\r\nimport {userLogin} from '../redux/actions/userAction'\r\nimport classnames from 'classnames'\r\nconst Login = () => {\r\n    const store = useSelector(store => store.userRoot)\r\n    const errorRoot = useSelector(store=>store.errorRoot)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [errors, setErrors] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (store.isAuthenticated) {\r\n            history.push('/home')\r\n        }\r\n    }, [store.isAuthenticated])\r\n\r\n    useEffect(() => {\r\n        if (errorRoot.loginErrors) {\r\n            setErrors(errorRoot.loginErrors)\r\n        }\r\n    }, [errorRoot.loginErrors])\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userLogin({ email, password }, history))\r\n        setIsLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (errorRoot.loginErrors ||\r\n            store.isAuthenticated) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [errorRoot.loginErrors, store.isAuthenticated])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-4 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">USER</h1>\r\n                    <form noValidate onSubmit={formSubmitHandler} >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\"  value={email} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" className={classnames(\"form-control\",\r\n                                {\r\n                                    'is-invalid': errors.email\r\n\r\n                                })} />\r\n                            {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)} \r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                            <input onChange={(e) => setPassword(e.target.value)} type=\"password\"  value={password} id=\"exampleInputPassword1\"\r\n                                className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errors.password\r\n\r\n                                    })} />\r\n                            {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                        </div>\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"col-md-1\">\r\n                                {\r\n                                    isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                        <span class=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\r\n                    </form>\r\n                    <div className=\"mt-3\">\r\n                        <Link className=\"mt-4\" to=\"/register\">Dont have an Account?</Link>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Link className=\"mt-4\" to=\"/forgotPassword\">Forgot Password?</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Home.jsx",["111","112"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { allCourses } from '../redux/actions/userAction'\r\nimport Navbar from '../components/Navbar'\r\nimport Card from '../components/Card'\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const store = useSelector(store => store.courseRoot)\r\n    const [courses, setAllCourses] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    useEffect(() => {\r\n        dispatch(allCourses())\r\n        setIsLoading(true)\r\n    }, [])\r\n    useEffect(() => {\r\n        if (store.allCourse.length !== 0) {\r\n            setAllCourses(store.allCourse)\r\n            setIsLoading(false)\r\n        }\r\n        \r\n    }, [store.allCourse])\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ marginTop: \"100px\" }}>\r\n                <div className=\"row\">\r\n\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-md-1\">\r\n                            {\r\n                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                    <span class=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    {courses.map((data,index) =>\r\n                        <Card key={index} course={data} />\r\n                        )}\r\n                   \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\Payment.jsx",["113","114"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {buyCourse} from '../../redux/actions/userAction'\r\n\r\nconst Payment = (props) => {\r\n    const history = useHistory()\r\n    const store = useSelector(store => store.userRoot)\r\n    const dispatch = useDispatch()\r\n    const [courseId, setCourseId] = useState(\"\")\r\n    const [course, setCourse] = useState({})\r\n    useEffect(() => {\r\n        setCourseId(props.match.params.courseId)\r\n       \r\n    }, [props.match.params.courseId])\r\n    useEffect(() => {\r\n        const curr_course = store.user.cart.find(obj => {\r\n            return obj._id === props.match.params.courseId\r\n        })\r\n        setCourse(curr_course)   \r\n    },[])\r\n\r\n    const clickHandler = (courseId) => {\r\n        dispatch(buyCourse(courseId,history))\r\n    }\r\n    return (\r\n        <div class=\"container\" style={{ marginTop: \"100px\" }}>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4 offset-md-4 border\">\r\n                    {course ? <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{course.title}</h5>\r\n                        <h5 class=\"card-title\">Price: {course.price}$</h5>\r\n                        <h6 class=\"card-title\">Duration: {course.duration} minute</h6>\r\n                        <h6 class=\"card-title\">Category: {course.category}</h6>\r\n                        <p class=\"card-text\">{course.description}</p> \r\n                        <button onClick={()=>clickHandler(course._id)} type=\"button\" class=\"btn btn-primary\">Procced to Pay with Razorpay</button>\r\n                    </div> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\ForgotPassword.jsx",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\Cart.jsx",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\MyCourses.jsx",["115","116"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport VideoPlayer from '../../components/VideoPlayer'\r\nimport { allCourses, myCourses } from '../../redux/actions/userAction'\r\n\r\n\r\nconst MyCourses = () => {\r\n    const user = useSelector(store => store.userRoot.user)\r\n    const [arr, setArr] = useState([])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(myCourses())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (user.coursesBought) {\r\n            setArr(user.coursesBought)\r\n        }  \r\n    },[user])\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"container\" style={{marginTop:\"100px\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    \r\n                    {arr.length !== 0 && arr.map((course, index)=>\r\n                       <VideoPlayer key={index} course={course}  />\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCourses\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\UploadVideos.jsx",["117","118","119","120","121"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory} from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport {addCourse, spinnerHelper} from '../../redux/actions/userAction'\r\nimport Navbar from '../../components/Navbar'\r\n\r\nconst UploadVideos = () => {\r\n    const history = useHistory()\r\n    const store = useSelector(store=>store.courseRoot)\r\n    const dispatch = useDispatch()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [price, setPrice] = useState(0)\r\n    const [videoFile, setVideoFile] = useState({})\r\n    const [imageFile, setImageFile] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState({})\r\n\r\n    const categories = [\r\n        { value: \"web-development\", label: \"Web Development\" },\r\n        { value: \"andriod-development\", label: \"Android Development\" },\r\n        { value: \"ui/ux-design\", label: \"Ui/UX Design\" },\r\n        { value: \"cooking\", label: \"Cooking\" },\r\n        { value: \"graphic-design\", label: \"Graphic Design\" },\r\n    ]\r\n\r\n\r\n    const fileHandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let video = e.target.files[0]\r\n            setVideoFile(video)\r\n        }\r\n    }\r\n\r\n    // const imageHandler = (e) => {\r\n    //     if (e.target.files && e.target.files[0]) {\r\n    //         let image = e.target.files[0]\r\n    //         setImageFile(image)\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"videoFile\", videoFile)\r\n      //  formData.append(\"imageFile\", imageFile)\r\n        formData.append(\"title\", title)\r\n        formData.append(\"price\", price)\r\n        formData.append(\"category\", category)\r\n        formData.append(\"description\", description)\r\n        dispatch(addCourse(formData,history))\r\n        setIsLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.addCourseFlag) {\r\n            setIsLoading(false)\r\n            dispatch(spinnerHelper(false))\r\n        }\r\n    }, [store.addCourseFlag])\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ marginTop: \"100px\" }}>\r\n                <div className=\"row justify-content-center mt-5\">\r\n                    <div className=\"col-md-6\">\r\n                        <form noValidate onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputId\">Video File</label>\r\n                                <input required className=\"form-control\" type=\"file\" accept=\"video/*\" id=\"inputId\" onChange={fileHandler} multiple={false} />\r\n                            </div>\r\n                            {/* <div className=\"form-group\">\r\n                            <label htmlFor=\"thumbnailId\">Thumbnail</label>\r\n                            <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"thumbnailId\" onChange={imageHandler}></input>\r\n                        </div> */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"titleId\">Title</label>\r\n                                <input value={title} onChange={(e) => setTitle(e.target.value)} required type=\"text\" className=\"form-control\" id=\"titleId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"categoryId\">Category</label>\r\n                                <select value={category} onChange={(e) => setCategory(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.year\r\n\r\n                                    })} id=\"categoryId\">\r\n                                    <option>Select</option>\r\n                                    {categories.map((data, index) =>\r\n                                        <option key={index} value={data.value}>{data.label}</option>\r\n                                    )}\r\n                                </select>\r\n                                {error.category && (<div classNameName=\"invalid-feedback\">{error.category}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <label htmlFor=\"descriptionId\">Decription</label>\r\n                                <textarea value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" className=\"form-control\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"priceId\">Price</label>\r\n                                <input value={price} onChange={(e) => setPrice(e.target.value)} type=\"number\" className=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-1\">\r\n                                    {\r\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Upload</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default UploadVideos\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\Profile.jsx",["122","123"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n    const user = useSelector(store => store.userRoot.user)\r\n\r\n    return (\r\n        <div className=\"container\" style={{ marginTop: \"100px\" }}>\r\n            <div className=\"row\">\r\n                {console.log(\"as\", user)}\r\n                <div className=\"col-md-6\">\r\n                    <h2>Name: {user.name}</h2>\r\n                    <h2>Email: {user.email}</h2>\r\n                    <h2>Own Courses: {user.coursesCreated && user.coursesCreated.length} </h2>\r\n                    <h2>Total Earnings: {user.totalIncome} </h2>\r\n                    <h2>Total Course Bought: {user.coursesBought && user.coursesBought.length} </h2>\r\n                    <h2>Totla Expenditures: {user.totalExpenditure}</h2>\r\n                    \r\n                    {user.coursesCreated.length !== 0 && \r\n                        user.coursesCreated.map(obj =>\r\n                            < div class=\"card ml-5 my-3\" style={{ width: \"25rem\", display: \"inline-block\" }}>\r\n                                <video width=\"400\" controls>\r\n                                    <source src={obj.file} type=\"video/mp4\" />\r\n                                </video>\r\n                                <h4 class=\"card-title\"><strong>Title: </strong>{obj.title}</h4>\r\n                                <h5 class=\"card-title\"><strong>Duration: </strong>{obj.duration} minute</h5>\r\n                                <h5 class=\"card-title\"><strong>Category: </strong> {obj.category}</h5>\r\n                                <Link to={`/courseDetails/${obj._id}`}>QNA </Link>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\pages\\Admin\\CourseDetails.jsx",["124","125"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {courseDetailsById} from '../../redux/actions/userAction'\r\n// import VideoPlayer from '../../components/VideoPlayer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CourseDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const singleCourse = useSelector(store=>store.courseRoot.singleCourse)\r\n    const [course, setCourse] = useState({})\r\n\r\n    useEffect(() => {\r\n        dispatch(courseDetailsById(props.match.params.courseId))\r\n    }, [props.match.params.courseId])\r\n    \r\n    useEffect(() => {\r\n        if (singleCourse) {\r\n            setCourse(singleCourse)\r\n        }\r\n    },[singleCourse])\r\n    return (\r\n        <div className=\"container\" style={{ marginTop: \"100px\" }}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    {course.file && <><video width=\"100%\" controls>\r\n                        <source src={course.file} type=\"video/mp4\" />\r\n                    </video>\r\n                        <h4 class=\"card-title\"><strong>Title: </strong>{course.title}</h4>\r\n                        <h5 class=\"card-title\"><strong>Duration: </strong>{course.duration} minute</h5>\r\n                        <h5 class=\"card-title\"><strong>Category: </strong> {course.category}</h5>\r\n                        \r\n                    </>}\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <h1>QNA Section</h1>\r\n                    {course.qna && course.qna.map(obj =>\r\n                        <>\r\n                            <h3>{obj.sender}: {obj.message}</h3>\r\n                            </>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseDetails\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\Navbar.jsx",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\userReducer.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\courseReducer.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\redux\\reducers\\errorReducer.js",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\CartCard.jsx",[],"D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\Card.jsx",["126"],"import React,{useEffect, useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {addToCart} from '../redux/actions/userAction'\r\n\r\nconst Card = (props) => {\r\n    const store = useSelector(store => store.userRoot)\r\n    const [isDisabled, setIsDisabled] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n    const addToCartClickHandler = () => {\r\n        dispatch(addToCart(props.course._id))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const alreadyAdded = store.user.cart.find(obj => {\r\n            return obj._id === props.course._id\r\n        })\r\n        if (alreadyAdded) {\r\n            setIsDisabled(true)\r\n        }\r\n    }, [store.user.cart])\r\n    \r\n    return (\r\n        <div class=\"card ml-5 my-3\" style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title text-center\">Author: <Link to={`/profile`}>{props.course.createdBy.name}</Link></h4>\r\n                <h4 class=\"card-title\"><strong>{props.course.title}</strong></h4>\r\n                <h5 class=\"card-title\"><strong>Sales: </strong>{props.course.userWhoHasBought.length}</h5>\r\n                <h5 class=\"card-title\"><strong>Price: </strong>{props.course.price}$</h5>\r\n                <h6 class=\"card-title\"><strong>Duration: </strong>{props.course.duration} minute</h6>\r\n                <h6 class=\"card-title\"><strong>Category: </strong>{props.course.category}</h6>\r\n                <p class=\"card-text\"><strong>Descriptipon: </strong>{props.course.description}</p>\r\n                {store.user._id !== props.course.createdBy._id ? <button disabled={isDisabled} onClick={addToCartClickHandler} className=\"btn btn-info btn-block\">{isDisabled ? \"Already Added\" : \"Add To Cart\"} </button>\r\n                    : <Link to={`/courseDetails/${props.course._id}`} className=\"btn btn-info btn-block\">View </Link>\r\n            }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","D:\\INTEREST\\LearnerHub\\server\\client\\src\\components\\VideoPlayer.jsx",["127","128"],"import React, { useState, useEffect } from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {askQuestion} from '../redux/actions/userAction'\r\n\r\nconst VideoPlayer = (props) => {\r\n    const [message, setMessage] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n    const clickHandler = () => {\r\n        dispatch(askQuestion(props.course._id, message))\r\n        setMessage(\"\")\r\n    }\r\n    return (\r\n        <div class=\"card ml-5 my-3\" style={{ width: \"25rem\", display: \"inline-block\" }}>\r\n            <video width=\"400\" controls>\r\n                <source src={props.course.file} type=\"video/mp4\" />\r\n            </video>\r\n            <h4 class=\"card-title\"><strong>Title: </strong>{props.course.title}</h4>\r\n            <h5 class=\"card-title\"><strong>Duration: </strong>{props.course.duration} minute</h5>\r\n            <h5 class=\"card-title\"><strong>Category: </strong> {props.course.category}</h5> \r\n            <Link to={`/courseDetails/${props.course._id}`}>QNA </Link>\r\n            <textarea onChange={(e) => setMessage(e.target.value)} type=\"text\" value={message} id=\"exampleInputPassword1\"\r\n                className=\"form-control\"\r\n                     />\r\n            <button onClick={clickHandler} type=\"button\" className=\"btn btn-info\">Ask Question</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":38,"column":21,"nodeType":"135","messageId":"136","endLine":38,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":114,"column":21,"nodeType":"135","messageId":"136","endLine":114,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":135,"column":21,"nodeType":"135","messageId":"136","endLine":135,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":159,"column":21,"nodeType":"135","messageId":"136","endLine":159,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":20,"column":8,"nodeType":"139","endLine":20,"endColumn":31,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"137","severity":1,"message":"142","line":14,"column":8,"nodeType":"139","endLine":14,"endColumn":10,"suggestions":"143"},{"ruleId":"133","severity":1,"message":"144","line":10,"column":12,"nodeType":"135","messageId":"136","endLine":10,"endColumn":20},{"ruleId":"137","severity":1,"message":"145","line":21,"column":7,"nodeType":"139","endLine":21,"endColumn":9,"suggestions":"146"},{"ruleId":"133","severity":1,"message":"147","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":20},{"ruleId":"137","severity":1,"message":"142","line":13,"column":8,"nodeType":"139","endLine":13,"endColumn":10,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"141","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":14},{"ruleId":"133","severity":1,"message":"149","line":17,"column":12,"nodeType":"135","messageId":"136","endLine":17,"endColumn":21},{"ruleId":"133","severity":1,"message":"150","line":17,"column":23,"nodeType":"135","messageId":"136","endLine":17,"endColumn":35},{"ruleId":"133","severity":1,"message":"151","line":19,"column":19,"nodeType":"135","messageId":"136","endLine":19,"endColumn":27},{"ruleId":"137","severity":1,"message":"142","line":64,"column":8,"nodeType":"139","endLine":64,"endColumn":29,"suggestions":"152"},{"ruleId":"133","severity":1,"message":"153","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"154","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"155","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"142","line":14,"column":8,"nodeType":"139","endLine":14,"endColumn":37,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"157","line":23,"column":8,"nodeType":"139","endLine":23,"endColumn":25,"suggestions":"158"},{"ruleId":"133","severity":1,"message":"154","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"159","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'Navbar' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["163"],"'courseId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.courseId' and 'store.user.cart'. Either include them or remove the dependency array.",["164"],"'allCourses' is defined but never used.",["165"],"'imageFile' is assigned a value but never used.","'setImageFile' is assigned a value but never used.","'setError' is assigned a value but never used.",["166"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.",["167"],"React Hook useEffect has a missing dependency: 'props.course._id'. Either include it or remove the dependency array.",["168"],"'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"171","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [history, store.isAuthenticated]",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [props.match.params.courseId, store.user.cart]",{"range":"186","text":"187"},{"range":"188","text":"185"},"Update the dependencies array to be: [dispatch, store.addCourseFlag]",{"range":"189","text":"190"},"Update the dependencies array to be: [dispatch, props.match.params.courseId]",{"range":"191","text":"192"},"Update the dependencies array to be: [props.course._id, store.user.cart]",{"range":"193","text":"194"},[770,793],"[history, store.isAuthenticated]",[560,562],"[dispatch]",[781,783],"[props.match.params.courseId, store.user.cart]",[464,466],[2222,2243],"[dispatch, store.addCourseFlag]",[568,597],"[dispatch, props.match.params.courseId]",[708,725],"[props.course._id, store.user.cart]"]